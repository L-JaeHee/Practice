{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./widget/core.ts","webpack:///./widget/model.ts","webpack:///./widget/index.ts","webpack:///./widget/button.ts","webpack:///./widget/div.ts","webpack:///./widget/span.ts","webpack:///./widget/ul.ts","webpack:///./widget/input.ts","webpack:///./main.ts"],"sourcesContent":["const controls = new Map();\nexport class ControlBase {\n    constructor(id) {\n        this._id = id;\n        addControl(this);\n    }\n    get id() {\n        return this._id;\n    }\n    get element() {\n        return this._element;\n    }\n    dispose() {\n        removeControl(this._id);\n    }\n}\nexport function getControl(id) {\n    return controls.get(id);\n}\nfunction addControl(control) {\n    controls.set(control.id, control);\n}\nfunction removeControl(id) {\n    controls.delete(id);\n}\n","import { ButtonControl } from \"./button\";\nimport { DivControl } from \"./div\";\nimport { SpanControl } from \"./span\";\nimport { UlControl } from \"./ul\";\nimport { InputControl } from \"./input\";\nexport const Model = {\n    ButtonControl,\n    DivControl,\n    SpanControl,\n    UlControl,\n    InputControl,\n};\n","import { getControl } from \"./core\";\nimport { Model as model } from \"./model\";\nexport const Widget = {\n    getControl,\n};\nexport const Model = model;\n","import { ControlBase } from \"./core\";\nexport class ButtonControl extends ControlBase {\n    constructor(option) {\n        super(option.id);\n        const buttonEl = document.createElement(\"button\");\n        buttonEl.textContent = option.content;\n        buttonEl.onclick = option.onclick;\n        this._element = buttonEl;\n    }\n}\n","import { ControlBase } from \"./core\";\nexport class DivControl extends ControlBase {\n    constructor(option) {\n        super(option.id);\n        const divEl = document.createElement(\"div\");\n        this._element = divEl;\n    }\n    append(control) {\n        this._element.append(control.element);\n    }\n}\n","import { ControlBase } from \"./core\";\nexport class SpanControl extends ControlBase {\n    constructor(option) {\n        super(option.id);\n        const spanEl = document.createElement(\"span\");\n        spanEl.textContent = option.content;\n        this._element = spanEl;\n    }\n}\n","import { ControlBase } from \"./core\";\nexport class UlControl extends ControlBase {\n    constructor(option) {\n        super(option.id);\n        const ulEl = document.createElement(\"ul\");\n        ulEl.style.listStyle = \"none\";\n        ulEl.style.padding = \"0\";\n        this._element = ulEl;\n        this._columns = option.columns;\n        this.render(option.datas, option.columns);\n    }\n    reload(datas) {\n        this._element.innerHTML = \"\";\n        this.render(datas, this._columns);\n    }\n    render(datas, columns) {\n        datas.forEach((data) => {\n            const liEl = document.createElement(\"li\");\n            columns.forEach((column) => {\n                liEl.append(column.render(data));\n            });\n            this._element.append(liEl);\n        });\n    }\n}\n","import { ControlBase } from \"./core\";\nexport class InputControl extends ControlBase {\n    constructor(option) {\n        var _a, _b;\n        super(option.id);\n        const inputEl = document.createElement(\"input\");\n        inputEl.type = option.inputType;\n        inputEl.checked = (_a = option.checked) !== null && _a !== void 0 ? _a : false;\n        inputEl.onclick = (_b = option.onclick) !== null && _b !== void 0 ? _b : null;\n        this._element = inputEl;\n    }\n    getValue() {\n        return this._element.value;\n    }\n    clear() {\n        this._element.value = \"\";\n    }\n    focus() {\n        this._element.focus();\n    }\n}\n","import { Widget, Model } from \"./widget\";\nconst items = [];\nrender();\nfunction render() {\n    const div = new Model.DivControl({ id: \"root\" });\n    document.body.append(div.element);\n    div.append(new Model.InputControl({ id: \"inputControl\", inputType: \"text\" }));\n    div.append(new Model.ButtonControl({ id: \"inputBtnControl\", content: \"입력\", onclick: inputBtnClickHandler }));\n    div.append(new Model.UlControl({\n        id: \"todolist\",\n        datas: getItemsByChecked(false),\n        columns: [{ render: renderColumnDone }, { render: renderColumnTodo }, { render: renderColumnDelete }],\n    }));\n    div.append(new Model.UlControl({\n        id: \"donelist\",\n        datas: getItemsByChecked(true),\n        columns: [{ render: renderColumnDone }, { render: renderColumnTodo }, { render: renderColumnDelete }],\n    }));\n}\nfunction inputBtnClickHandler() {\n    const inputControl = Widget.getControl(\"inputControl\");\n    if (!inputControl.getValue()) {\n        alert(\"할일을 입력해주세요\");\n        return;\n    }\n    items.push({\n        id: crypto.randomUUID(),\n        content: inputControl.getValue(),\n        checked: false,\n    });\n    inputControl.clear();\n    inputControl.focus();\n    reloadTodoList();\n}\nfunction getItemsByChecked(checked) {\n    return items.filter((item) => {\n        return item.checked === checked;\n    });\n}\nfunction renderColumnDone(data) {\n    const checkbox = new Model.InputControl({\n        id: `${data.id}:done`,\n        inputType: \"checkbox\",\n        checked: data.checked,\n        onclick: (event) => {\n            data.checked = event.target.checked;\n            reloadDoneList();\n            reloadTodoList();\n        },\n    });\n    return checkbox.element;\n}\nfunction renderColumnTodo(data) {\n    const span = new Model.SpanControl({ id: `${data.id}:todo`, content: data.content });\n    return span.element;\n}\nfunction renderColumnDelete(data) {\n    const button = new Model.ButtonControl({\n        id: `${data.id}:delete`,\n        content: \"삭제\",\n        onclick: (event) => {\n            items.splice(items.indexOf(data), 1);\n            data.checked ? reloadDoneList() : reloadTodoList();\n            [\"done\", \"todo\", \"delete\"].forEach((keyWord) => {\n                var _a;\n                (_a = Widget.getControl(`${data.id}:${keyWord}`)) === null || _a === void 0 ? void 0 : _a.dispose();\n            });\n        },\n    });\n    return button.element;\n}\nfunction reloadDoneList() {\n    const donelist = Widget.getControl(\"donelist\");\n    donelist.reload(getItemsByChecked(true));\n}\nfunction reloadTodoList() {\n    const todolist = Widget.getControl(\"todolist\");\n    todolist.reload(getItemsByChecked(false));\n}\n"],"names":["controls","Map","ControlBase","constructor","id","this","_id","set","element","_element","dispose","delete","Widget","getControl","get","option","super","buttonEl","document","createElement","textContent","content","onclick","divEl","append","control","spanEl","ulEl","style","listStyle","padding","_columns","columns","render","datas","reload","innerHTML","forEach","data","liEl","column","_a","_b","inputEl","type","inputType","checked","getValue","value","clear","focus","items","inputBtnClickHandler","inputControl","push","crypto","randomUUID","reloadTodoList","alert","getItemsByChecked","filter","item","renderColumnDone","event","target","reloadDoneList","renderColumnTodo","renderColumnDelete","splice","indexOf","keyWord","div","body"],"sourceRoot":""}