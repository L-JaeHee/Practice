{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./widget/core.ts","webpack:///./widget/model.ts","webpack:///./widget/index.ts","webpack:///./widget/button.ts","webpack:///./widget/div.ts","webpack:///./widget/span.ts","webpack:///./widget/ul.ts","webpack:///./widget/input.ts","webpack:///./main.ts"],"sourcesContent":["const controls = new Map();\nexport class ControlBase {\n    constructor(id) {\n        this._id = id;\n        addControl(this);\n    }\n    get id() {\n        return this._id;\n    }\n    get element() {\n        return this._element;\n    }\n    dispose() {\n        removeControl(this._id);\n    }\n}\nexport function getControl(id) {\n    return controls.get(id);\n}\nfunction addControl(control) {\n    controls.set(control.id, control);\n}\nfunction removeControl(id) {\n    controls.delete(id);\n}\n","import { ButtonControl } from \"./button\";\nimport { DivControl } from \"./div\";\nimport { SpanControl } from \"./span\";\nimport { UlControl } from \"./ul\";\nimport { InputControl } from \"./input\";\nexport const Model = {\n    ButtonControl,\n    DivControl,\n    SpanControl,\n    UlControl,\n    InputControl,\n};\n","import { getControl } from \"./core\";\nimport { Model as model } from \"./model\";\nexport const Widget = {\n    getControl,\n};\nexport const Model = model;\n","import { ControlBase } from \"./core\";\nexport class ButtonControl extends ControlBase {\n    constructor(option) {\n        super(option.id);\n        const buttonEl = document.createElement(\"button\");\n        buttonEl.textContent = option.content;\n        buttonEl.onclick = option.onclick;\n        this._element = buttonEl;\n    }\n}\n","import { ControlBase } from \"./core\";\nexport class DivControl extends ControlBase {\n    constructor(option) {\n        super(option.id);\n        const divEl = document.createElement(\"div\");\n        this._element = divEl;\n    }\n    append(control) {\n        this._element.append(control.element);\n    }\n}\n","import { ControlBase } from \"./core\";\nexport class SpanControl extends ControlBase {\n    constructor(option) {\n        super(option.id);\n        const spanEl = document.createElement(\"span\");\n        spanEl.textContent = option.content;\n        this._element = spanEl;\n    }\n}\n","import { ControlBase } from \"./core\";\nexport class UlControl extends ControlBase {\n    constructor(option) {\n        super(option.id);\n        const ulEl = document.createElement(\"ul\");\n        ulEl.style.listStyle = \"none\";\n        ulEl.style.padding = \"0\";\n        this._element = ulEl;\n        this._columns = option.columns;\n        this.render(option.datas, option.columns);\n    }\n    reload(datas) {\n        this._element.innerHTML = \"\";\n        this.render(datas, this._columns);\n    }\n    render(datas, columns) {\n        datas.forEach((data) => {\n            const liEl = document.createElement(\"li\");\n            columns.forEach((column) => {\n                liEl.append(column.render(data));\n            });\n            this._element.append(liEl);\n        });\n    }\n}\n","import { ControlBase } from \"./core\";\nexport class InputControl extends ControlBase {\n    constructor(option) {\n        var _a, _b;\n        super(option.id);\n        const inputEl = document.createElement(\"input\");\n        inputEl.type = option.inputType;\n        inputEl.checked = (_a = option.checked) !== null && _a !== void 0 ? _a : false;\n        inputEl.onclick = (_b = option.onclick) !== null && _b !== void 0 ? _b : null;\n        this._element = inputEl;\n    }\n    getValue() {\n        return this._element.value;\n    }\n    clear() {\n        this._element.value = \"\";\n    }\n    focus() {\n        this._element.focus();\n    }\n}\n","import { Widget, Model } from \"./widget\";\nconst items = [];\nrender();\nfunction render() {\n    const div = new Model.DivControl({ id: \"root\" });\n    document.body.append(div.element);\n    div.append(new Model.InputControl({ id: \"inputControl\", inputType: \"text\" }));\n    div.append(new Model.ButtonControl({ id: \"inputBtnControl\", content: \"입력\", onclick: inputBtnClickHandler }));\n    div.append(new Model.UlControl({\n        id: \"todolist\",\n        datas: getSortedItems({ checked: false }),\n        columns: [{ render: renderColumnDone }, { render: renderColumnTodo }, { render: renderColumnDelete }],\n    }));\n    div.append(new Model.UlControl({\n        id: \"donelist\",\n        datas: getSortedItems({ checked: true }),\n        columns: [{ render: renderColumnDone }, { render: renderColumnTodo }, { render: renderColumnDelete }],\n    }));\n}\nfunction inputBtnClickHandler() {\n    const inputControl = Widget.getControl(\"inputControl\");\n    if (inputControl instanceof Model.InputControl) {\n        if (!inputControl.getValue()) {\n            alert(\"할일을 입력해주세요\");\n            return;\n        }\n        items.push({\n            id: crypto.randomUUID(),\n            content: inputControl.getValue(),\n            checked: false,\n        });\n        inputControl.clear();\n        inputControl.focus();\n    }\n    const todolistControl = Widget.getControl(\"todolist\");\n    todolistControl.reload(getSortedItems({ checked: false }));\n}\nfunction getSortedItems(option) {\n    return items.filter((item) => {\n        return item.checked === option.checked;\n    });\n}\nfunction renderColumnDone(data) {\n    const checkbox = new Model.InputControl({\n        id: `${data.id}:done`,\n        inputType: \"checkbox\",\n        checked: data.checked,\n        onclick: (event) => {\n            data.checked = event.target.checked;\n            const donelist = Widget.getControl(\"donelist\");\n            const todolist = Widget.getControl(\"todolist\");\n            donelist.reload(getSortedItems({ checked: true }));\n            todolist.reload(getSortedItems({ checked: false }));\n        },\n    });\n    return checkbox.element;\n}\nfunction renderColumnTodo(data) {\n    const span = new Model.SpanControl({ id: `${data.id}:todo`, content: data.content });\n    return span.element;\n}\nfunction renderColumnDelete(data) {\n    const button = new Model.ButtonControl({\n        id: `${data.id}:delete`,\n        content: \"삭제\",\n        onclick: (event) => {\n            items.splice(items.indexOf(data), 1);\n            const donelist = Widget.getControl(\"donelist\");\n            const todolist = Widget.getControl(\"todolist\");\n            data.checked ? donelist.reload(getSortedItems({ checked: true })) : todolist.reload(getSortedItems({ checked: false }));\n            [\"done\", \"todo\", \"delete\"].forEach((keyWord) => {\n                var _a;\n                (_a = Widget.getControl(`${data.id}:${keyWord}`)) === null || _a === void 0 ? void 0 : _a.dispose();\n            });\n        },\n    });\n    return button.element;\n}\n"],"names":["controls","Map","ControlBase","constructor","id","this","_id","set","element","_element","dispose","delete","Widget","get","option","super","buttonEl","document","createElement","textContent","content","onclick","divEl","append","control","spanEl","ulEl","style","listStyle","padding","_columns","columns","render","datas","reload","innerHTML","forEach","data","liEl","column","_a","_b","inputEl","type","inputType","checked","getValue","value","clear","focus","items","inputBtnClickHandler","inputControl","alert","push","crypto","randomUUID","getSortedItems","filter","item","renderColumnDone","event","target","donelist","todolist","renderColumnTodo","renderColumnDelete","splice","indexOf","keyWord","div","body"],"sourceRoot":""}